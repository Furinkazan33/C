!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mathieu/C/test/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
CLT_FUNCALL	logical.c	/^	CLT_FUNCALL,$/;"	e	enum:c_log_stat_type	file:
CLT_NONE	logical.c	/^	CLT_NONE = 0,$/;"	e	enum:c_log_stat_type	file:
CLT_VALUE	logical.c	/^	CLT_VALUE,$/;"	e	enum:c_log_stat_type	file:
CLT_VAR	logical.c	/^	CLT_VAR,$/;"	e	enum:c_log_stat_type	file:
EC_LEXER	error.c	/^	EC_LEXER,$/;"	e	enum:error_context	file:
EC_LEXER_READ_CODE	error.c	/^	EC_LEXER_READ_CODE,$/;"	e	enum:error_context	file:
EC_LEXER_STRING	error.c	/^	EC_LEXER_STRING,$/;"	e	enum:error_context	file:
EC_LEXER_TOKEN	error.c	/^	EC_LEXER_TOKEN,$/;"	e	enum:error_context	file:
EC_NONE	error.c	/^	EC_NONE = 0,$/;"	e	enum:error_context	file:
EC_PARSER	error.c	/^	EC_PARSER,$/;"	e	enum:error_context	file:
EC_PARSER_CLEAN	error.c	/^	EC_PARSER_CLEAN,$/;"	e	enum:error_context	file:
EC_PARSER_READ	error.c	/^	EC_PARSER_READ,$/;"	e	enum:error_context	file:
EC_PARSER_READ_DEFINE	error.c	/^	EC_PARSER_READ_DEFINE,$/;"	e	enum:error_context	file:
EC_PARSER_READ_INCLUDE	error.c	/^	EC_PARSER_READ_INCLUDE,$/;"	e	enum:error_context	file:
EC_PARSER_READ_VAR	error.c	/^	EC_PARSER_READ_VAR,$/;"	e	enum:error_context	file:
ERROR_MAX_FN_LEN	error.c	/^#define ERROR_MAX_FN_LEN /;"	d	file:
ERROR_MAX_MESS_LEN	error.c	/^#define ERROR_MAX_MESS_LEN /;"	d	file:
ET_BAD_FORMAT	error.c	/^	ET_BAD_FORMAT,$/;"	e	enum:error_type	file:
ET_BAD_RETURN	error.c	/^	ET_BAD_RETURN,$/;"	e	enum:error_type	file:
ET_BAD_TYPE	error.c	/^	ET_BAD_TYPE,$/;"	e	enum:error_type	file:
ET_NONE	error.c	/^	ET_NONE = 0,$/;"	e	enum:error_type	file:
MAX	random.c	/^#define MAX /;"	d	file:
MIN	random.c	/^#define MIN /;"	d	file:
PERSON_OFFSETS	nostruct.c	/^#define PERSON_OFFSETS /;"	d	file:
PERSON_SIZE	nostruct.c	/^#define PERSON_SIZE /;"	d	file:
PERSON_SIZES	nostruct.c	/^#define PERSON_SIZES /;"	d	file:
S1	structs.c	/^	S1 = 0,$/;"	e	enum:s_type	file:
S2	structs.c	/^	S2,$/;"	e	enum:s_type	file:
S3	structs.c	/^	S3$/;"	e	enum:s_type	file:
SIZE	random.c	/^#define SIZE /;"	d	file:
_POSIX_C_SOURCE	random.c	/^#define _POSIX_C_SOURCE /;"	d	file:
__anon41b17d8c0208	config.c	/^typedef struct {$/;"	s	file:
__lehmer32	random.c	/^uint32_t __lehmer32() {$/;"	f	typeref:typename:uint32_t
ascii_print	ascii.c	/^void ascii_print(int c, int line) {$/;"	f	typeref:typename:void
ascii_print_table	ascii.c	/^void ascii_print_table(int line) {$/;"	f	typeref:typename:void
c_log_stat	logical.c	/^typedef struct c_log_stat {$/;"	s	file:
c_log_stat	logical.c	/^} c_log_stat;$/;"	t	typeref:struct:c_log_stat	file:
c_log_stat_type	logical.c	/^typedef enum c_log_stat_type {$/;"	g	file:
c_log_stat_type	logical.c	/^} c_log_stat_type;$/;"	t	typeref:enum:c_log_stat_type	file:
cfg_var_new	config.c	/^config_var *cfg_var_new(char *name, char *value) {$/;"	f	typeref:typename:config_var *
cmp3	d_sort.c	/^int cmp3(int ref, int a, int b) {$/;"	f	typeref:typename:int
config_var	config.c	/^} config_var;$/;"	t	typeref:struct:__anon41b17d8c0208	file:
context	error.c	/^	error_context context;$/;"	m	struct:error	typeref:typename:error_context	file:
data	logical.c	/^	void *data;$/;"	m	struct:c_log_stat	typeref:typename:void *	file:
data	structs.c	/^	char data[64];$/;"	m	struct:struct3	typeref:typename:char[64]	file:
data	structs.c	/^	double data;$/;"	m	struct:struct2	typeref:typename:double	file:
data	structs.c	/^	int data;$/;"	m	struct:struct1	typeref:typename:int	file:
err	error.c	/^static error err;$/;"	v	typeref:typename:error	file:
error	error.c	/^typedef struct error {$/;"	s	file:
error	error.c	/^} error;$/;"	t	typeref:struct:error	file:
error_context	error.c	/^typedef enum error_context {$/;"	g	file:
error_context	error.c	/^} error_context;$/;"	t	typeref:enum:error_context	file:
error_context_literal	error.c	/^char *error_context_literal(error_context c) {$/;"	f	typeref:typename:char *
error_is_set	error.c	/^int error_is_set(error *e) {$/;"	f	typeref:typename:int
error_print	error.c	/^void error_print(error *e, FILE *file) {$/;"	f	typeref:typename:void
error_reset	error.c	/^void error_reset(error *e) {$/;"	f	typeref:typename:void
error_set	error.c	/^void error_set(error *e, error_context context, error_type type, char *funcname, char *message, /;"	f	typeref:typename:void
error_type	error.c	/^typedef enum error_type {$/;"	g	file:
error_type	error.c	/^} error_type;$/;"	t	typeref:enum:error_type	file:
error_type_literal	error.c	/^char *error_type_literal(error_type t) {$/;"	f	typeref:typename:char *
funcname	error.c	/^	char funcname[ERROR_MAX_FN_LEN];$/;"	m	struct:error	typeref:typename:char[]	file:
is_int	ascii.c	/^int is_int(char *s) {$/;"	f	typeref:typename:int
main	array_scale.c	/^int main() {$/;"	f	typeref:typename:int
main	ascii.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	d_sort.c	/^int main(void) {$/;"	f	typeref:typename:int
main	error.c	/^int main(void) {$/;"	f	typeref:typename:int
main	logical.c	/^int main(void) {$/;"	f	typeref:typename:int
main	nostruct.c	/^int main() {$/;"	f	typeref:typename:int
main	random.c	/^int main(void) {$/;"	f	typeref:typename:int
main	ref_ref.c	/^int main(void) {$/;"	f	typeref:typename:int
main	structs.c	/^int main(void) {$/;"	f	typeref:typename:int
message	error.c	/^	char message[ERROR_MAX_MESS_LEN];$/;"	m	struct:error	typeref:typename:char[]	file:
nLehmer	random.c	/^uint32_t nLehmer;$/;"	v	typeref:typename:uint32_t
name	config.c	/^	char *name;$/;"	m	struct:__anon41b17d8c0208	typeref:typename:char *	file:
p	error.c	/^	void *p;$/;"	m	struct:error	typeref:typename:void *	file:
person_new	nostruct.c	/^char *person_new(int id, int age, char *name, char *desc) {$/;"	f	typeref:typename:char *
person_print	nostruct.c	/^void person_print(char *p) { $/;"	f	typeref:typename:void
print_tab	d_sort.c	/^void print_tab(int *tab, int size) {$/;"	f	typeref:typename:void
result	random.c	/^int result[SIZE];$/;"	v	typeref:typename:int[]
rnd_double	random.c	/^double rnd_double(double min, double max) {$/;"	f	typeref:typename:double
rnd_int	random.c	/^int rnd_int(int min, int max) {$/;"	f	typeref:typename:int
rnd_set_seed	random.c	/^void rnd_set_seed(uint32_t seed) {$/;"	f	typeref:typename:void
s_type	structs.c	/^typedef enum s_type {$/;"	g	file:
s_type	structs.c	/^} s_type;$/;"	t	typeref:enum:s_type	file:
shift	ref_ref.c	/^int shift(char **p) {$/;"	f	typeref:typename:int
shift2	ref_ref.c	/^int shift2(char **p) {$/;"	f	typeref:typename:int
sort_nearest	d_sort.c	/^void sort_nearest(int ref, int *tab, int size, int (*cmp)(int, int, int)) {$/;"	f	typeref:typename:void
stoi	nostruct.c	/^int stoi(char *s) { return *((int *) s); }$/;"	f	typeref:typename:int
struct1	structs.c	/^typedef struct struct1 {$/;"	s	file:
struct1	structs.c	/^} struct1;$/;"	t	typeref:struct:struct1	file:
struct2	structs.c	/^typedef struct struct2 {$/;"	s	file:
struct2	structs.c	/^} struct2;$/;"	t	typeref:struct:struct2	file:
struct3	structs.c	/^typedef struct struct3 {$/;"	s	file:
struct3	structs.c	/^} struct3;$/;"	t	typeref:struct:struct3	file:
test	error.c	/^void test() {$/;"	f	typeref:typename:void
type	error.c	/^	error_type type;$/;"	m	struct:error	typeref:typename:error_type	file:
type	logical.c	/^	c_log_stat_type type;$/;"	m	struct:c_log_stat	typeref:typename:c_log_stat_type	file:
type	structs.c	/^	s_type type;$/;"	m	struct:struct1	typeref:typename:s_type	file:
type	structs.c	/^	s_type type;$/;"	m	struct:struct2	typeref:typename:s_type	file:
type	structs.c	/^	s_type type;$/;"	m	struct:struct3	typeref:typename:s_type	file:
value	config.c	/^	char *value;$/;"	m	struct:__anon41b17d8c0208	typeref:typename:char *	file:
