ARRAY2D	src/array2d.h	13
ARRAY2D_DECLARE	src/array2d.h	/^#define ARRAY2D_DECLARE(type, name) typedef struct/
ARRAY2D_DECLARE	src/array2d.h	/^ARRAY2D_DECLARE(char, array2d);$/
ARRAY2D_FREE	src/array2d.h	/^#define ARRAY2D_FREE(a) free(a->items); free(a)$/
ARRAY2D_GET	src/array2d.h	/^#define ARRAY2D_GET(a, l, c) (void *)(((char *)a->/
ARRAY2D_GET_AS	src/array2d.h	/^#define ARRAY2D_GET_AS(a, l, c, type) (type *)(((c/
ARRAY2D_MAP	src/array2d.h	/^#define ARRAY2D_MAP(a, f) FOR(i, 0, a->capacity, f/
ARRAY2D_MAP1	src/array2d.h	/^#define ARRAY2D_MAP1(a, f, arg) FOR(i, 0, a->capac/
ARRAY2D_MAP2	src/array2d.h	/^#define ARRAY2D_MAP2(a, f, arg1, arg2) FOR(i, 0, a/
ARRAY2D_MAP_C	src/array2d.h	/^#define ARRAY2D_MAP_C(a, c, f) FOR(l, 0, a->height/
ARRAY2D_MAP_C1	src/array2d.h	/^#define ARRAY2D_MAP_C1(a, c, f, arg) FOR(l, 0, a->/
ARRAY2D_MAP_C2	src/array2d.h	/^#define ARRAY2D_MAP_C2(a, c, f, arg1, arg2) FOR(l,/
ARRAY2D_MAP_L	src/array2d.h	/^#define ARRAY2D_MAP_L(a, l, f) FOR(c, 0, a->width,/
ARRAY2D_MAP_L1	src/array2d.h	/^#define ARRAY2D_MAP_L1(a, l, f, arg) FOR(c, 0, a->/
ARRAY2D_MAP_L2	src/array2d.h	/^#define ARRAY2D_MAP_L2(a, l, f, arg1, arg2) FOR(c,/
ARRAY2D_SET	src/array2d.h	/^#define ARRAY2D_SET(a, l, c, v) memcpy(((char *)a-/
array2d_new	src/array2d.h	/^array2d *array2d_new(size_t height, size_t width, /
array2d_new_from_file	src/array2d.h	/^array2d *array2d_new_from_file(size_t height, size/
array2d_resize	src/array2d.h	/^array2d *array2d_resize(void *a, size_t new_width,/
array2d_scale	src/array2d.h	/^array2d *array2d_scale(void *a, size_t new_size_of/
array2d_write_to_file	src/array2d.h	/^array2d *array2d_write_to_file(void *a, FILE *fd);/
