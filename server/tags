!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mathieu/repos/C/server/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BUF_SIZE	src/test/frd.c	/^#define BUF_SIZE /;"	d	file:
CLI_BUF_SIZE	src/test/sock_client.c	/^#define CLI_BUF_SIZE /;"	d	file:
CLI_MESS_SIZE	src/test/sock_client.c	/^#define CLI_MESS_SIZE /;"	d	file:
EOM	src/include/frd.c	/^static char EOM[] = { '\\0', '\\n', EOF };$/;"	v	typeref:typename:char[]	file:
MESS_SIZE	src/test/frd.c	/^#define MESS_SIZE /;"	d	file:
SERV_BUF_SIZE	src/server.c	/^#define SERV_BUF_SIZE /;"	d	file:
SERV_BUF_SIZE	src/test/sock_server.c	/^#define SERV_BUF_SIZE /;"	d	file:
SERV_MESS_SIZE	src/server.c	/^#define SERV_MESS_SIZE /;"	d	file:
SERV_MESS_SIZE	src/test/sock_server.c	/^#define SERV_MESS_SIZE /;"	d	file:
admin_message	src/server.c	/^static int admin_message(char *message, int fd) {$/;"	f	typeref:typename:int	file:
admin_quit	src/server.c	/^static int admin_quit = 0;$/;"	v	typeref:typename:int	file:
frd_buf_next	src/include/frd.c	/^static int frd_buf_next(char *message, size_t mess_size, size_t *m_pos, char *buffer, size_t buf/;"	f	typeref:typename:int	file:
frd_handle	src/test/frd.c	/^int frd_handle(char *message, int fd) {$/;"	f	typeref:typename:int
frd_is_eom	src/include/frd.c	/^static int frd_is_eom(char c) {$/;"	f	typeref:typename:int	file:
frd_read	src/include/frd.c	/^int frd_read(int fd, int (*handle)(char *, int), char *message, size_t mess_size, size_t *m_pos,/;"	f	typeref:typename:int
frd_read_switch	src/test/frd.c	/^int frd_read_switch(int fd) {$/;"	f	typeref:typename:int
main	src/server.c	/^int main(void) {$/;"	f	typeref:typename:int
main	src/test/config.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/test/fifo.c	/^int main(void) {$/;"	f	typeref:typename:int
main	src/test/frd.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/test/sock_client.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/test/sock_server.c	/^int main() {$/;"	f	typeref:typename:int
main	src/test/tb.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
mess_treat	src/test/fifo.c	/^int mess_treat(char *message) {$/;"	f	typeref:typename:int
mess_treat	src/test/sock_client.c	/^int mess_treat(char *message, int fd) {$/;"	f	typeref:typename:int
serv_mess_handler	src/test/sock_server.c	/^int serv_mess_handler(char *message, int fd) {$/;"	f	typeref:typename:int
sig_catch	src/server.c	/^static void sig_catch(int signal) {$/;"	f	typeref:typename:void	file:
sigint	src/server.c	/^static int sigint = 0;$/;"	v	typeref:typename:int	file:
usage	src/test/config.c	/^void usage(char *exec) {$/;"	f	typeref:typename:void
